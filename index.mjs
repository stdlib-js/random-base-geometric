// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-probability@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-floor@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-ln@esm/index.mjs";var f=h,g=j;var c=function(t,e){var n=t();return 0===n&&(n=t()),f(g(n)/g(1-e))},b=t,v=e,y=n,x=s,w=r.isPrimitive,L=i,N=o,E=m,O=d,P=a.factory,T=l,G=p,R=u,A=c;var J=function(){var t,e,n,s;if(0===arguments.length)e=P();else if(1===arguments.length&&x(arguments[0]))if(N(t=arguments[0],"prng")){if(!L(t.prng))throw new TypeError(R("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",t.prng));e=t.prng}else e=P(t);else{if(!w(s=arguments[0]))throw new TypeError(R("invalid argument. First argument must be a probability. Value: `%s`.",s));if(arguments.length>1){if(!x(t=arguments[1]))throw new TypeError(R("invalid argument. Options argument must be an object. Value: `%s`.",t));if(N(t,"prng")){if(!L(t.prng))throw new TypeError(R("invalid option. `prng` option must be a pseudorandom number generator function. Option: `%s`.",t.prng));e=t.prng}else e=P(t)}else e=P()}return b(n=void 0===s?u:p,"NAME","geometric"),t&&t.prng?(b(n,"seed",null),b(n,"seedLength",null),y(n,"state",E(null),O),b(n,"stateLength",null),b(n,"byteLength",null),b(n,"toJSON",E(null)),b(n,"PRNG",e)):(v(n,"seed",r),v(n,"seedLength",i),y(n,"state",d,a),v(n,"stateLength",o),v(n,"byteLength",m),b(n,"toJSON",l),b(n,"PRNG",e),e=e.normalized),n;function r(){return e.seed}function i(){return e.seedLength}function o(){return e.stateLength}function m(){return e.byteLength}function d(){return e.state}function a(t){e.state=t}function l(){var t={type:"PRNG"};return t.name=n.NAME,t.state=G(e.state),t.params=void 0===s?[]:[s],t}function p(){return A(e,s)}function u(t){return T(t)||t<0||t>1?NaN:A(e,t)}},M=J(),S=J;t(M,"factory",S);var V=M;export{V as default,S as factory};
//# sourceMappingURL=index.mjs.map
