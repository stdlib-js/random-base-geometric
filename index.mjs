// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.1.0-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-accessor@v0.1.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-write-accessor@v0.2.0-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.2.0-esm/index.mjs";import{isPrimitive as r}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-probability@v0.2.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-function@v0.2.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.2.0-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-constant-function@v0.2.0-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-noop@v0.2.0-esm/index.mjs";import{factory as l}from"https://cdn.jsdelivr.net/gh/stdlib-js/random-base-mt19937@v0.1.0-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-assert-is-nan@v0.2.0-esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/array-to-json@v0.2.0-esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-floor@v0.2.0-esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-ln@v0.1.1-esm/index.mjs";function f(t,e){var n=t();return 0===n&&(n=t()),h(j(n)/j(1-e))}function g(){var h,j,g,c;if(0===arguments.length)j=l();else if(1===arguments.length&&s(arguments[0]))if(o(h=arguments[0],"prng")){if(!i(h.prng))throw new TypeError(u("invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.","prng",h.prng));j=h.prng}else j=l(h);else{if(!r(c=arguments[0]))throw new TypeError(u("invalid argument. First argument must be a probability. Value: `%s`.",c));if(arguments.length>1){if(!s(h=arguments[1]))throw new TypeError(u("invalid argument. Options argument must be an object. Value: `%s`.",h));if(o(h,"prng")){if(!i(h.prng))throw new TypeError(u("invalid option. `%s` option must be a pseudorandom number generator function. Option: `%s`.","prng",h.prng));j=h.prng}else j=l(h)}else j=l()}return t(g=void 0===c?O:E,"NAME","geometric"),h&&h.prng?(t(g,"seed",null),t(g,"seedLength",null),n(g,"state",d(null),m),t(g,"stateLength",null),t(g,"byteLength",null),t(g,"toJSON",d(null)),t(g,"PRNG",j)):(e(g,"seed",v),e(g,"seedLength",b),n(g,"state",w,L),e(g,"stateLength",y),e(g,"byteLength",x),t(g,"toJSON",N),t(g,"PRNG",j),j=j.normalized),g;function v(){return j.seed}function b(){return j.seedLength}function y(){return j.stateLength}function x(){return j.byteLength}function w(){return j.state}function L(t){j.state=t}function N(){var t={type:"PRNG"};return t.name=g.NAME,t.state=p(j.state),t.params=void 0===c?[]:[c],t}function E(){return f(j,c)}function O(t){return a(t)||t<0||t>1?NaN:f(j,t)}}var c=g();t(c,"factory",g);export{c as default,g as factory};
//# sourceMappingURL=index.mjs.map
